name: Cypress Tests

on: [ ] #push, pull_request

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  FTR_PATH: 'ftr'
  START_CMD: 'node ../scripts/opensearch_dashboards --dev --no-base-path --no-watch --opensearch_security.multitenancy.enable_aggregation_view=true'
  OPENSEARCH_SNAPSHOT_CMD: 'node ../scripts/opensearch snapshot'
  SPEC: 'cypress/integration/plugins/security-dashboards-plugin/aggregation_view.js,'
  OPENSEARCH_VERSION: 3.0.0
  PLUGIN_NAME: opensearch-security
  PLUGIN_VERSION: 3.0.0.0

jobs:
  tests:
    name: Run Cypress tests
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest , windows-latest ]
        #os: [ windows-latest ]
        #os: [ ubuntu-latest ]
        jdk: [11, 17]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Checkout Branch
        uses: actions/checkout@v2
      
      - name: Download OpenSearch Security Plugin on Linux
        if: ${{ runner.os == 'Linux' }}
        run: wget --progress=bar:force:noscroll -O opensearch-security.zip https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/${{ env.OPENSEARCH_VERSION }}/latest/linux/x64/tar/builds/opensearch/plugins/${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.zip
      
      - name: Download OpenSearch Security Plugin on Windows
        if: ${{ runner.os == 'Windows' }}
        run: Invoke-WebRequest -Uri https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/${{ env.OPENSEARCH_VERSION }}/latest/windows/x64/zip/builds/opensearch/plugins/${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.zip  -Outfile opensearch-security.zip

      - name: Create Setup Script for Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          cat > setup.sh <<'EOF'
          chmod +x  ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh 
          /bin/bash -c "yes | ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh"
          EOF

      - name: Create Setup Script for Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          New-Item .\setup.bat -type file
          Set-Content .\setup.bat -Value "powershell.exe -noexit -command `"echo 'y' | .\opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT\plugins\${{ env.PLUGIN_NAME }}\tools\install_demo_configuration.bat`""
          Get-Content .\setup.bat

      - name: Run Opensearch with A Single Plugin
        uses: opensearch-project/security/.github/actions/start-opensearch-with-one-plugin@main
        with:
          opensearch-version: ${{ env.OPENSEARCH_VERSION }}
          plugin-name: ${{ env.PLUGIN_NAME }}
          setup-script-name: setup

      - name: Run Dashboard with Security Dashboards Plugin
        uses: ./.github/actions/install-dashboards
        with:
          plugin_name: security-dashboards-plugin

      - name: Configure and Run OpenSearch Dashboards
        continue-on-error: false
        run: |
          cd ./OpenSearch-Dashboards
          echo 'server.host: "0.0.0.0"' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.hosts: ["https://localhost:9200"]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.ssl.verificationMode: none' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.username: "kibanaserver"' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.password: "kibanaserver"' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.requestHeadersWhitelist: [ authorization,securitytenant ]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.multitenancy.enabled: true' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.multitenancy.tenants.preferred: ["Private", "Global"]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.readonly_mode.roles: ["kibana_read_only"]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.cookie.secure: false' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.multitenancy.enable_aggregation_view: true' >> ./config/opensearch_dashboards.yml
          echo 'logging.dest: osd.log' >> ./config/opensearch_dashboards.yml
          cat ./config/opensearch_dashboards.yml
          yarn start --no-base-path --no-watch &
          sleep 500
          cat osd.log
          curl -XGET http://localhost:5601 -L
        
        #cat osd.log

        #run node ../../scripts/opensearch-dashboards --dev --no-base-path &

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.FTR_PATH }}
          repository: opensearch-project/opensearch-dashboards-functional-test
          ref: 'main'

      - name: Get Cypress version
        id: cypress_version
        run: |
          echo "::set-output name=cypress_version::$(cat ./${{ env.FTR_PATH }}/package.json | jq '.devDependencies.cypress' | tr -d '"')"
          curl -XGET http://0.0.0.0:5601 -L
      
      - name: Run tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: ${{ env.FTR_PATH }}
          command: yarn cypress:run-with-security-and-aggregation-view --browser chromium --spec ${{ env.SPEC }}
          #wait-on: 'http://localhost:5601'
