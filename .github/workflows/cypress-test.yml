name: Cypress Tests

on: [push, pull_request]

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  FTR_PATH: 'ftr'
  START_CMD: 'node ../scripts/opensearch_dashboards --dev --no-base-path --no-watch --opensearch_security.multitenancy.enable_aggregation_view=true'
  OPENSEARCH_SNAPSHOT_CMD: 'node ../scripts/opensearch snapshot'
  SPEC: 'cypress/integration/plugins/security-dashboards-plugin/aggregation_view.js,'
  OPENSEARCH_VERSION: 3.0.0
  PLUGIN_NAME: opensearch-security
  PLUGIN_VERSION: 3.0.0.0

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        jdk: [ 11, 17 ]
    runs-on: ${{ matrix.os }}

    name: Run Cypress Tests
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2

      - name: Download OpenSearch Security
        uses: peternied/download-file@v2
        with:
          url: https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/${{ env.OPENSEARCH_VERSION }}/latest/linux/x64/tar/builds/opensearch/plugins/${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.zip

      - name: Rename OpenSearch Security Plugin
        run: |
          echo in $(pwd) 
          echo trying to rename ${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.zip
          ls
          mv ${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.zip ${{ env.PLUGIN_NAME }}.zip

      - name: Create Setup Script
        if: ${{ runner.os == 'Linux' }}
        run: |
          cat > setup.sh <<'EOF'
          chmod +x  ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh 
          /bin/bash -c "./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh -y"
          EOF

      - name: Create Setup Script
        if: ${{ runner.os == 'Windows' }}
        run: |
          New-Item .\setup.bat -type file
          Set-Content .\setup.bat -Value "powershell.exe .\opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT\plugins\${{ env.PLUGIN_NAME }}\tools\install_demo_configuration.bat -y"
          Get-Content .\setup.bat

      - name: Run Opensearch with A Single Plugin
        uses: scrawfor99/security/.github/actions/start-opensearch-with-one-plugin@modify-for-dash-config
        with:
          opensearch-version: ${{ env.OPENSEARCH_VERSION }}
          plugin-name: ${{ env.PLUGIN_NAME }}
          setup-script-name: setup

      - name: Run Dashboard with Security Dashboards Plugin
        uses: ./.github/actions/install-dashboards
        with:
          plugin_name: security-dashboards-plugin

      - name: Configure and Run OpenSearch Dashboards on Linux
        continue-on-error: false
        if: ${{ runner.os == 'Linux' }}
        run: |
          cd ./OpenSearch-Dashboards
          echo 'server.host: "0.0.0.0"' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.hosts: ["https://localhost:9200"]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.ssl.verificationMode: none' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.username: "kibanaserver"' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.password: "kibanaserver"' >> ./config/opensearch_dashboards.yml
          echo 'opensearch.requestHeadersWhitelist: [ authorization,securitytenant ]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.multitenancy.enabled: true' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.multitenancy.tenants.preferred: ["Private", "Global"]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.readonly_mode.roles: ["kibana_read_only"]' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.cookie.secure: false' >> ./config/opensearch_dashboards.yml
          echo 'opensearch_security.multitenancy.enable_aggregation_view: true' >> ./config/opensearch_dashboards.yml
          yarn start --no-base-path --no-watch &
          sleep 300

      - name: Configure and Run OpenSearch Dashboards on Windows
        continue-on-error: false
        if: ${{ runner.os == 'Windows' }}
        run: |
          cd .\OpenSearch-Dashboards
          Add-Content .\config\opensearch_dashboards.yml "server.host: `"0.0.0.0`""
          Add-Content .\config\opensearch_dashboards.yml "opensearch.hosts: [`"https://localhost:9200`"]"
          Add-Content .\config\opensearch_dashboards.yml "opensearch.ssl.verificationMode: none"
          Add-Content .\config\opensearch_dashboards.yml "opensearch.username: `"kibanaserver`""
          Add-Content .\config\opensearch_dashboards.yml "opensearch.password: `"kibanaserver`""
          Add-Content .\config\opensearch_dashboards.yml "opensearch.requestHeadersWhitelist: [ authorization,securitytenant ]"
          Add-Content .\config\opensearch_dashboards.yml "opensearch_security.multitenancy.enabled: true"
          Add-Content .\config\opensearch_dashboards.yml "opensearch_security.multitenancy.tenants.preferred: [`"Private`", `"Global`"]"
          Add-Content .\config\opensearch_dashboards.yml "opensearch_security.readonly_mode.roles: [`"kibana_read_only`"]"
          Add-Content .\config\opensearch_dashboards.yml "opensearch_security.cookie.secure: false"
          Add-Content .\config\opensearch_dashboards.yml "opensearch_security.multitenancy.enable_aggregation_view: true"
          yarn start --no-base-path --no-watch &
          sleep 300

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.FTR_PATH }}
          repository: opensearch-project/opensearch-dashboards-functional-test
          ref: 'main'

      - name: Get Cypress version
        id: cypress_version
        run: echo "::set-output name=cypress_version::$(cat ./${{ env.FTR_PATH }}/package.json | jq '.devDependencies.cypress' | tr -d '"')"

      - name: Run tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: ${{ env.FTR_PATH }}
          command: yarn cypress:run-with-security-and-aggregation-view --browser chromium --spec ${{ env.SPEC }}
