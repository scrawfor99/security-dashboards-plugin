name: Integration Tests

on: [push, pull_request]

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  OPENSEARCH_VERSION: 3.0.0
  PLUGIN_NAME: opensearch-security
  PLUGIN_VERSION: 3.0.0.0

jobs:
  tests:
    name: Run integration tests
    strategy:
      fauk-fast: false
      matrix:
        os: [ ubuntu-latest , windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v2

      - uses: browser-actions/setup-geckodriver@latest
      - run: geckodriver --version

      - uses: browser-actions/setup-firefox@latest
      - run: firefox --version
          
      - name: Download OpenSearch Security Plugin
        run: wget --progress=bar:force:noscroll -O opensearch-security.zip https://ci.opensearch.org/ci/dbc/distribution-build-opensearch/${{ env.OPENSEARCH_VERSION }}/latest/linux/x64/tar/builds/opensearch/plugins/${{ env.PLUGIN_NAME }}-${{ env.PLUGIN_VERSION }}.zip
      
      - name: Create Setup Script for Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          cat > setup.sh <<'EOF'
          chmod +x  ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh 
          /bin/bash -c "yes | ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/plugins/${{ env.PLUGIN_NAME }}/tools/install_demo_configuration.sh"
          echo "plugins.security.unsupported.restapi.allow_securityconfig_modification: true" >> ./opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT/config/opensearch.yml
          EOF

      - name: Create Setup Script for Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          New-Item .\setup.bat -type file
          Set-Content .\setup.bat -Value "powershell.exe -noexit -command `"echo 'y' | .\opensearch-${{ env.OPENSEARCH_VERSION }}-SNAPSHOT\plugins\${{ env.PLUGIN_NAME }}\tools\install_demo_configuration.bat`""
          Get-Content .\setup.bat

      - name: Run Opensearch with A Single Plugin
        uses: opensearch-project/security/.github/actions/start-opensearch-with-one-plugin@main
        with:
          opensearch-version: ${{ env.OPENSEARCH_VERSION }}
          plugin-name: ${{ env.PLUGIN_NAME }}
          setup-script-name: setup

      - id: install-dashboards
        uses: ./.github/actions/install-dashboards
        with:
          plugin_name: security-dashboards-plugin

      - name: Start Dashboards in background
        run: node scripts/build_opensearch_dashboards_platform_plugins.js
        working-directory: ${{ steps.install-dashboards.outputs.dashboards-directory }}

      - name: Run integration tests
        run: |
          echo "check if opensearch is ready"
          curl -XGET https://localhost:9200 -u 'admin:admin' -k
          yarn test:jest_server --coverage
        working-directory: ${{ steps.install-dashboards.outputs.plugin-directory }}
